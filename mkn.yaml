#! clean build -dtS

name: tick

self: 
  preprocessing
  array_test 
  inference 
  simulation 
  optim/solver 

property:
    postfix: x86_64-linux-gnu
    py_maj: 3
    py_min: 5m
    py_ver: cpython-
    lib_name: .${py_ver}${py_maj}${py_min}-${postfix}
    lib_path: tick
    cargs: -DNPY_NO_DEPRECATED_API=NPY_1_7_API_VERSION
           -D_FILE_OFFSET_BITS=64 -DPYTHON_LINK
           -DNDEBUG
    win_cargs:
      -Ox -GL -DNDEBUG -MT -EHsc -DBUILDING_DLL
    nixish_cargs: -fwrapv -O2 -Wall
                  -fstack-protector-strong 
                  -Wformat -Werror=format-security -Wdate-time 
                  -D_FORTIFY_SOURCE=2 -fPIC -std=c++11
                  -ffast-math -Wno-uninitialized
                  
    nix_cargs: ${nixish_cargs}

    bsd_cargs: ${nixish_cargs}

    nixish_largs: -fstack-protector-strong -Wformat 
                  -Werror=format-security -Wdate-time 
                  -D_FORTIFY_SOURCE=2 
    nix_largs: ${nixish_largs} -pthread
               -Wl,-O1 -Wl,-Bsymbolic-functions
               -Wl,-z,relro -Wl,-z,relro
    bsd_largs: ${nixish_largs} 

    nixish_test_cargs: -Wno-error=unused-local-typedefs 
                       -Wno-error=sign-compare -Wno-sign-compare

profile:
  - name: arg
    arg: ${cargs} 
    if_arg:
      win: ${win_cargs}
      nix: ${nix_cargs}
      bsd: ${bsd_cargs}
    if_link:
      nix_lib: ${nix_largs}
      bsd_lib: ${bsd_largs}
      win: -nodefaultlib:libucrt.lib ucrt.lib -MANIFEST:EMBED,ID=2 -MANIFESTUAC:NO -LTCG 

  - name: base
    parent: arg
    self: array
    src:
      ./tick/base/src
      ./tick/base/swig
    install: ${lib_path}/base/build
    out: _base${lib_name}

  - name: array
    parent: arg
    inc: 
      ./tick/base/src 
      ./tick/base/array/src
      ./tick/third_party/cereal/include
    src:
      ./tick/base/array/src
      ./tick/base/array/swig
    install: ${lib_path}/base/array/build
    out: _array${lib_name}

  - name: array_test
    parent: arg
    self: base
    inc: 
      ./tick/base/array_test/src
    src:
      ./tick/base/array_test/src
      ./tick/base/array_test/swig
    install: ${lib_path}/base/array_test/build
    out: _array_test${lib_name}

  - name: inference
    parent: arg
    self: optim/model
    inc: ./tick/inference/src
    src:
      ./tick/inference/src
      ./tick/inference/swig
    install: ${lib_path}/inference/build
    out: _inference${lib_name}

  - name: optim/model
    parent: arg
    self: base
    inc: ./tick/optim/model/src
    src:
      ./tick/optim/model/src
      ./tick/optim/model/swig
    install: ${lib_path}/optim/model/build
    out: _model${lib_name}

  - name: optim/prox
    parent: arg
    self: base
    inc: ./tick/optim/prox/src
    src:
      ./tick/optim/prox/src
      ./tick/optim/prox/swig
    install: ${lib_path}/optim/prox/build
    out: _prox${lib_name}

  - name: optim/solver
    parent: arg
    self: random optim/model optim/prox
    inc: ./tick/optim/solver/src
    src:
      ./tick/optim/solver/src
      ./tick/optim/solver/swig
    install: ${lib_path}/optim/solver/build
    out: _solver${lib_name}

  - name: preprocessing
    parent: arg
    self: base
    inc: ./tick/preprocessing/src
    src:
      ./tick/preprocessing/src
      ./tick/preprocessing/swig
    install: ${lib_path}/preprocessing/build
    out: _preprocessing${lib_name}

  - name: simulation
    parent: arg
    self: random
    inc: ./tick/simulation/src
    src:
      ./tick/simulation/src
      ./tick/simulation/swig
    install: ${lib_path}/simulation/build
    out: _simulation${lib_name}

  - name: random
    parent: arg
    self: base
    inc: ./tick/random/src
    src:
      ./tick/random/src
      ./tick/random/swig
    install: ${lib_path}/random/build
    out: _crandom${lib_name}

  - name: benchmarks
    parent: arg
    main: tick/benchmarks/src/poisson_sdca.cpp
    self: base optim/model optim/prox optim/solver random
    src:
      ./tick/benchmarks/src
    mode: none
    out: tick_poisson_sdca

### See file ./sh/gtest/sh 
  - name: gtest
    parent: arg
    main: tick/optim/model/tests/src/hawkes_models_gtest.cpp
    self: optim/solver simulation
    arg: -DADD_MAIN
    mode: none
    if_arg:
      g++: ${nixish_test_cargs}
      clang++: ${nixish_test_cargs}
      win: -DGTEST_LINKED_AS_SHARED_LIBRARY
    if_link:
      g++: -Wl,-rpath=$PWD
    dep:
      - name: google.test
        version: master

